#{{- if .tags.personal -}}
#!/usr/bin/env sh
# chezmoi:template:left-delimiter="#{{" right-delimiter=}}
#{{- $rustUpInitPath := joinPath .brewPrefix "bin" "rustup-init" }}
#{{- if stat $rustUpInitPath }}
# rustup-init hash: #{{ include $rustUpInitPath | sha256sum }}
#{{- end }}

#{{- $sources := list }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "rustup.txt") }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" .chezmoi.os "rustup.txt") }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" .chezmoi.hostname "rustup.txt") }}
#{{- if .tags.personal }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "personal" "rustup.txt") }}
#{{- else if .tags.work }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "work" "rustup.txt") }}
#{{- end }}

#{{- range $_, $source := $sources }}
#{{- if stat $source }}
# #{{ $source }} hash: #{{ include $source | sha256sum }}
#{{- end }}
#{{- end }}

set -eum
trap 'kill 0' INT HUP TERM

: "${ARCH:?unknown architecture}"
: "${SYSTEM:?unknown system}"
: "${PACKAGES_PATH:?must be set}"

test "${TRACE:-0}" = "1" && set -x
test "${VERBOSE:-0}" = "1" && set -v

# import common functions
# shellcheck source=../.setup.d/functions.sh
. "${DOTFILES_PATH}/.setup.d/functions.sh"

printf "\e[1;33mRustup components\e[0m\n"

### Check package tool
printf "Checking \e[91mrustup\e[0m...\n"
# Get manager
if ! _=$(command -V rustup >/dev/null 2>&1); then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

createAndEnterTmpDir

INSTALLED="${PWD}/installed"
rustup component list 2>&1 | awk '/(installed)/ {print $1}' > "${INSTALLED}"

getPackagesPipeIntoVariable "rustup.txt" PACKAGES
FIFO=$(getRandomFifo)

### Install packages
while read -r PACKAGE; do
  parsePackageForRemoval "${PACKAGE}" > "${FIFO}"
  read -r REMOVE PACKAGE < "${FIFO}"

  case "${REMOVE}" in
    1)
      printf "[\e[91muninstall\e[m] Checking \e[96m%s\e[0m...\n" "${PACKAGE}"
      grep -q "${PACKAGE}" "${INSTALLED}" || continue
      printf "[\e[91muninstall\e[m] Uninstalling \e[96m%s\e[0m...\n" "${PACKAGE}"
      rustup component remove "${PACKAGE}" > /dev/null
    ;;
    0)
      printf "[\e[92m install \e[m] Checking \e[96m%s\e[0m...\n" "${PACKAGE}"
      grep -q "${PACKAGE}" "${INSTALLED}" && continue
      printf "[\e[92m install \e[m] Installing \e[96m%s\e[0m...\n" "${PACKAGE}"
      rustup component add "${PACKAGE}" > /dev/null
    ;;
  esac
done < "${PACKAGES}"
#{{- end -}}
