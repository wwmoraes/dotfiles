#!/usr/bin/env sh
# chezmoi:template:left-delimiter="#{{" right-delimiter=}}

#{{- $sources := list }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "rust.txt") }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" .chezmoi.os "rust.txt") }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" .chezmoi.hostname "rust.txt") }}
#{{- if .tags.personal }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "personal" "rust.txt") }}
#{{- else if .tags.work }}
#{{- $sources = append $sources (joinPath .chezmoi.sourceDir ".setup.d" "packages" "work" "rust.txt") }}
#{{- end }}

#{{- range $_, $source := $sources }}
#{{- if stat $source }}
# #{{ $source }} hash: #{{ include $source | sha256sum }}
#{{- end }}
#{{- end }}

set -eum
trap 'kill 0' INT HUP TERM

: "${ARCH:?unknown architecture}"
: "${SYSTEM:?unknown system}"
: "${PACKAGES_PATH:?must be set}"

test "${TRACE:-0}" = "1" && set -x
test "${VERBOSE:-0}" = "1" && set -v

# import common functions
# shellcheck source=../.setup.d/functions.sh
. "${DOTFILES_PATH}/.setup.d/functions.sh"

h1 "Rust packages"

### Check package tool
printCheckingBinary "rustup"
# Get manager
if ! _=$(command -v rustup >/dev/null 2>&1); then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
fi

createAndEnterTmpDir

printf "Listing installed packages...\n"
INSTALLED="${PWD}/installed"
cargo install --list | grep ':' | cut -d' ' -f1 > "${INSTALLED}"

getPackagesPipeIntoVariable "rust.txt" PACKAGES
FIFO=$(getRandomFifo)

### Install packages
while read -r PACKAGE; do
  parsePackageForRemoval "${PACKAGE}" > "${FIFO}"
  read -r REMOVE PACKAGE < "${FIFO}"

  FLAGS=""
  PKG="${PACKAGE%%|*}"
  BIN="${PACKAGE##*|}"
  test "${BIN}" = "${PKG}" && unset BIN
  if [ "${PKG%%://*}" != "${PKG}" ]; then
    FLAGS="${FLAGS} --git"
    NAME=${BIN}
  else
    FLAGS="${FLAGS} --locked"
    NAME=${PKG}
  fi

  case "${REMOVE}" in
    1)
      printStatus uninstall check "${NAME}"
      grep -q "${NAME}" "${INSTALLED}" || {
        printStatus uninstall skip "${NAME}"
        continue
      }

      printStatus uninstall execute "${NAME}"
      cargo -q uninstall -p "${NAME}" || status=failure
      printStatus uninstall "${status:-success}" "${NAME}"
    ;;
    0)
      printStatus install check "${NAME}"
      grep -q "${NAME}" "${INSTALLED}" && {
        printStatus install skip "${NAME}"
        continue
      }

      printStatus install execute "${NAME}"
      # shellcheck disable=SC2086
      cargo -q install ${FLAGS} "${PKG}" || status=failure
      printStatus install "${status:-success}" "${NAME}"
    ;;
  esac
done < "${PACKAGES}"
