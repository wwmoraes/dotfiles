{{- $environmentChoices := list "home" "work" -}}
{{- $environment := promptChoiceOnce . "environment.name" "What environment is this host on" $environmentChoices -}}

{{- $pinentry := lookPath "pinentry-tty" -}}
{{- if eq .chezmoi.os "darwin" -}}
	{{- $bin := "/usr/local/MacGPG2/libexec/pinentry-mac.app/Contents/MacOS/pinentry-mac" -}}
	{{- $binInfo := lstat $bin -}}
	{{- if and $binInfo (eq $binInfo.type "file") -}}
			{{- $pinentry = $bin -}}
	{{- end -}}
{{- end -}}

## two-step bootstrapping as the config is parsed only once
{{- $secrets := dict }}
{{- if eq .chezmoi.config.secret.command "sops" }}
{{- $secrets = mergeOverwrite $secrets (secretJSON (joinPath .chezmoi.homeDir "dev" "dotsecrets" "global.yaml")) }}
{{- $secrets = mergeOverwrite $secrets (secretJSON (joinPath .chezmoi.homeDir "dev" "dotsecrets" "home.yaml")) }}
{{- $secrets = mergeOverwrite $secrets (secretJSON (joinPath .chezmoi.homeDir "dev" "dotsecrets" "work.yaml")) }}
{{- end }}

encryption = "gpg"

{{ $secrets | toToml }}

[data.environment]
name = {{ $environment | quote }}
home = {{ eq $environment "home" }}
work = {{ eq $environment "work" }}

[data.work.features.proxies]
node.enabled = false
python.enabled = true

{{- with $secrets.data.work.docker.auths }}

[data.work.docker.config.auths]
{{- range $_, $auth := splitList "," . }}
"{{- $auth -}}" = {}
{{- end }}
{{- end }}

[diff]
pager = "delta"
exclude = ["scripts"]

[gpg]
recipient = {{ $secrets.data.personal.email | quote }}

[hooks.init.pre]
command = "task"
args = [
	"-d",
	{{ .chezmoi.sourceDir | quote }},
]

[interpreters.fish]
command = "fish"

[pinentry]
command = {{ $pinentry | quote }}

[scriptEnv]
# whether to apply MacOS defaults or not
DEFAULTS = "0"
# general script debug
TRACE = "0"
VERBOSE = "0"
DOT_ENVIRONMENT = {{ $environment | quote }}

[secret]
command = "sops"
args = ["decrypt", "--output-type", "json"]

[[textconv]]
pattern = "**/*.json"
command = "jq"
args = ["--sort-keys"]

[[textconv]]
pattern = "**/*.{yml,yaml}"
command = "yq"
args = ["'sort_keys(..)'"]
