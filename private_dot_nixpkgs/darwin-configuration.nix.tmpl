# chezmoi:template:left-delimiter="#{{" right-delimiter=}}
{ config, lib, pkgs, ... }:
rec {
  imports = [
    #{{- if .tags.personal }}
    ~/.nixpkgs/darwin/home-configuration.nix
    #{{- else if .tags.work }}
    ~/.nixpkgs/darwin/work-configuration.nix
    #{{- end }}
  ];

  nixpkgs.overlays = [
    (self: super: {
      fortune = super.fortune.override {
        withOffensive = true;
      };
    })
  ];

  environment.etc = {
    "pam.d/sudo_local" = {
      # sudo_local: local config file which survives system update and is included for sudo
      enable = true;
      text = ''
        auth optional   ${pkgs.pam-reattach}/lib/pam/pam_reattach.so
        auth sufficient pam_tid.so
      '';
    };
  };

  # List packages installed in system profile. To search by name, run:
  # $ nix-env -qaP | grep wget
  environment.systemPackages = with pkgs; [
    # tmuxPlugins.vim-tmux-focus-events # TODO configure in vim
    adrs
    babelfish
    bat
    coreutils
    delta
    direnv
    dive
    docker
    docker-credential-helpers
    envsubst
    fish
    fortune
    fswatch
    fzf
    gawk
    git
    gnupg
    grc
    jq
    lazygit
    lefthook
    less
    man
    moreutils
    neo-cowsay
    nix-direnv
    pam-reattach
    pet
    powerline-go
    skhd
    smug
    tlrc
    tmux
    vim
  ] ++ (with pkgs.tmuxPlugins; [
    continuum
    copycat
    resurrect
    sessionist
    yank
  ]);

  environment.systemPath = [
    "#{{ .chezmoi.homeDir }}/.local/bin"
    # "#{{ .chezmoi.homeDir }}/.nix-profile/bin"
    # "/run/current-system/sw/bin"
    # "/nix/var/nix/profiles/default/bin"
    "${config.homebrew.brewPrefix}/bin"
    "${config.homebrew.brewPrefix}/sbin"
    "${config.homebrew.brewPrefix}/opt/coreutils/libexec/gnubin"
    "${config.homebrew.brewPrefix}/opt/openjdk/bin"
    "#{{ .chezmoi.homeDir }}/Applications/kitty.app/Contents/MacOS"
    "#{{ .chezmoi.homeDir }}/go/bin"
    "#{{ .chezmoi.homeDir }}/.cabal/bin"
    "#{{ .chezmoi.homeDir }}/.cargo/bin"
  ];

  # TODO configure fonts
  fonts.packages = with pkgs; [
    comfortaa
    fira-code
    fira-code-symbols
    montserrat
    powerline-fonts
    powerline-symbols
    source-code-pro
  ];

  /** TODO update font caches
    printf "Updating font cache...\n"
    fc-cache -f

    printf "refreshing font database...\n"
    atsutil databases -removeUser

    printf "reloading font daemon...\n"
    killall fontd || true
  */

  homebrew.taps = [
    "dsully/tap" # macos-defaults
    "homebrew/bundle"
    "homebrew/services"
    "raggi/ale" # openssl-osx-ca
    "wwmoraes/tap"
  ];

  homebrew.brews = [
    "macos-defaults"
    "openssl-osx-ca"
    ## TODO wire unstable src then move those to systemPackages
    "chezmoi"
  ];

  homebrew.casks = [
    "1password-cli"
    "1password"
    "amethyst"
    "anytype"
    "appcleaner"
    "automatic-mouse-mover"
    "bartender"
    "bruno"
    "das-keyboard-q"
    "displaylink-login-screen-ext"
    "displaylink-manager"
    "docker"
    "elgato-stream-deck"
    "finicky"
    "flux"
    "gas-mask"
    "gimp"
    "gpg-suite-no-mail"
    "hammerspoon"
    "jabra-direct"
    "jtool2"
    "kitty"
    "launchpad-manager"
    "spotify"
    "suspicious-package"
    "the-unarchiver"
    "thingsmacsandboxhelper"
    "uninstallpkg"
    "visual-studio-code"
    "xbar"
    "zap"
    "zotero"
  ];

  homebrew.masApps = {
    "1Password for Safari" = 1569813296;
    "DoMarks" = 1518886084;
    "StopTheMadness" = 1376402589;
    "Tampermonkey" = 1482490089;
    "Things" = 904280696;
    "Userscripts-Mac-App" = 1463298887;
  };

  environment.variables = launchd.user.envVariables // {
    EDITOR = "vim";
    FZF_COMPLETE = "1";
    FZF_DEFAULT_OPTS = "--height=50% --layout=reverse";
    FZF_LEGACY_KEYBINDINGS = "0";
    FZF_REVERSE_ISEARCH_OPTS = ''--preview-window=up:10 --preview=\"bat {}\" --height=50%'';
    LESS = "-isRMFX +Gg --tilde";
    LSCOLORS = "exfxcxdxbxegedabagacad";
    MANPAGER = "less";
    VISUAL = "code";
    NIX_REMOTE = "daemon";
    PAGER = "less";
    SUDO_EDITOR = "vim";
    NIX_USER_PROFILE_DIR = "/nix/var/nix/profiles/per-user/$USER";
    PROJECTS_ORIGIN = "git@github.com:wwmoraes/%s.git";
    SSH_AUTH_SOCK = "~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock";
  };

  homebrew.enable = true;
  homebrew.caskArgs = {
    appdir = "~/Applications";
    no_quarantine = true;
  };
  homebrew.global = {
    autoUpdate = false;
    lockfiles = false;
  };
  homebrew.onActivation = {
    autoUpdate = true;
    upgrade = true;
    cleanup = "uninstall"; # "uninstall", "zap"
  };

  launchd.daemons = {
    "dev.artero.limit.maxfiles" = {
      serviceConfig = {
        Label = "dev.artero.limit.maxfiles";
        ProgramArguments = [
          "launchctl"
          "limit"
          "maxfiles"
          "1048576"
          "1048576"
        ];
        RunAtLoad = true;
      };
    };
    "dev.artero.limit.maxproc" = {
      serviceConfig = {
        Label = "dev.artero.limit.maxproc";
        ProgramArguments = [
          "launchctl"
          "limit"
          "maxproc"
          "65536"
          "65536"
        ];
        RunAtLoad = true;
      };
    };
    "dev.artero.sysctl" = {
      serviceConfig = {
        Label = "dev.artero.sysctl";
        ProgramArguments = [
          "/usr/sbin/sysctl"
          "kern.maxfiles=1048576"
          "kern.maxfilesperproc=65536"
        ];
        RunAtLoad = true;
      };
    };
    nix-daemon = {
      serviceConfig = {
        EnvironmentVariables = {
          NIX_GIT_SSL_CAINFO = environment.variables.NIX_GIT_SSL_CAINFO;
          NIX_SSL_CERT_FILE = environment.variables.NIX_SSL_CERT_FILE;
        };
      };
    };
  };
  launchd.user.agents = {
    "homebrew.mxcl.openssl-osx-ca" = {
      serviceConfig = {
        Label = "homebrew.mxcl.openssl-osx-ca";
        StartInterval = 604800;
      };
    };
  };
  launchd.user.envVariables = {
    CURL_CA_BUNDLE = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    NIX_SSL_CERT_FILE = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    NIX_GIT_SSL_CAINFO = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    NODE_EXTRA_CA_CERTS = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    REQUESTS_CA_BUNDLE = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    SSL_CERT_FILE = "${config.homebrew.brewPrefix}/etc/openssl@3/cert.pem";
    LANG = "en_US.UTF-8";
    LC_ALL = "en_US.UTF-8";
    LC_COLLATE = "en_US.UTF-8";
    LC_CTYPE = "en_US.UTF-8";
    LC_MESSAGES = "en_US.UTF-8";
    LC_MONETARY = "en_US.UTF-8";
    LC_NUMERIC = "en_US.UTF-8";
    LC_TIME = "en_US.UTF-8";
    EDITOR = "";
  };

  nix.configureBuildUsers = true;
  nix.nixPath = [
    { kaizen = "$HOME/dev/kaizen"; }
    { darwin-config = "${config.environment.darwinConfig}"; }
    { darwin = "$HOME/.nix-defexpr/channels/darwin"; }
    { nixpkgs = "/nix/var/nix/profiles/per-user/root/channels/nixpkgs"; }
    "/nix/var/nix/profiles/per-user/root/channels"
  ];
  nix.nrBuildUsers = 32;
  nix.package = pkgs.nix;
  nix.settings.trusted-users = [
    "@_developer"
    "@admin"
    "root"
  ];

  programs.fish.enable = true;
  programs.fish.useBabelfish = true;
  programs.fish.babelfishPackage = pkgs.babelfish;

  services.skhd.enable = true;
  services.nix-daemon.enable = true;

  # Used for backwards compatibility, please read the changelog before changing.
  # $ darwin-rebuild changelog
  system.stateVersion = 4;

  time.timeZone = "Europe/Amsterdam";
}
