## upstream: https://github.com/helix-editor/helix/blob/master/languages.toml

[language-server.efm]
command = "efm-langserver"

[language-server.yaml-language-server.config.yaml.format]
enable = true

[language-server.yaml-language-server.config.yaml.schemas]
# kubernetes = "/*.yaml"
# "https://json.schemastore.org/github-action.json" = "/.github/**/actions.yml"
"https://json.schemastore.org/github-workflow.json" = "/.github/workflows/*.{yml,yaml}"

[language-server.yaml-language-server.config.yaml.schemaStore]
url = "https://json.schemastore.org/package.json"

[language-server.vscode-json-language-server.config.json]
format = { enable = true }
schemaDownload = { enable = true }

[[language-server.vscode-json-language-server.config.json.schemas]]
fileMatch = ["/package.json"]
url = "https://json.schemastore.org/package.json"

[[language-server.vscode-json-language-server.config.json.schemas]]
fileMatch = [
	"*.azure-pipelines.yaml",
	"*.azure-pipelines.yml",
	"azure-pipelines.yaml",
	"azure-pipelines.yml"
]
url = "https://raw.githubusercontent.com/microsoft/azure-pipelines-vscode/master/service-schema.json"

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [
	"gopls",
	{ name = "efm", only-features = [ "diagnostics", "format" ] },
]
# customization
indent = { tab-width = 2, unit = "\t" }
formatter = { command = "goimports" }

[[language]]
name = "rust"
scope = "source.rust"
injection-regex = "rs|rust"
file-types = ["rs"]
roots = ["Cargo.toml", "Cargo.lock"]
shebangs = ["rust-script", "cargo"]
auto-format = true
comment-tokens = ["//", "///", "//!"]
block-comment-tokens = [
	{ start = "/*", end = "*/" },
	{ start = "/**", end = "*/" },
	{ start = "/*!", end = "*/" },
]
language-servers = [ "rust-analyzer" ]
persistent-diagnostic-sources = ["rustc", "clippy"]
# customization
indent = { tab-width = 2, unit = "\t" }
formatter = { command = "rustfmt" }

[[language]]
name = "make"
scope = "source.make"
file-types = [{ glob = "Makefile" }, { glob = "makefile" }, "make", "mk", {glob = "GNUmakefile" }, { glob = "OCamlMakefile" }]
shebangs = ["make", "gmake"]
injection-regex = "(make|makefile|Makefile|mk)"
comment-token = "#"
# customization
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "fish"
scope = "source.fish"
injection-regex = "fish"
file-types = ["fish", { glob = "*.fish.tmpl" }]
shebangs = ["fish"]
comment-token = "#"
auto-format = false
# customization
formatter = { command = "" }
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "latex"
scope = "source.tex"
injection-regex = "tex"
file-types = ["tex", "sty", "cls", "Rd", "bbx", "cbx"]
comment-token = "%"
language-servers = [ "texlab" ]
# customization
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "bibtex"
scope = "source.bib"
injection-regex = "bib"
file-types = ["bib"]
comment-token = "%"
language-servers = [ "texlab" ]
auto-format = true
# customization
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "git-config"
scope = "source.gitconfig"
file-types = [{ glob = ".gitmodules" }, { glob = ".gitconfig" }, { glob = ".git/config" }, { glob = ".config/git/*" }]
injection-regex = "git-config"
comment-token = "#"
# customization
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "dot"
scope = "source.dot"
injection-regex = "dot"
file-types = ["dot"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = [ "dot-language-server" ]
# customization
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "env"
scope = "source.env"
file-types = [{ glob = ".env" }, { glob = ".env.*" }, { glob = ".envrc" }, { glob = ".envrc.*" }]
injection-regex = "env"
comment-token = "#"
# customization
indent = { tab-width = 2, unit = "\t" }
grammar = "sh"

[[language]]
name = "nix"
scope = "source.nix"
injection-regex = "nix"
file-types = ["nix", { glob = "*.nix.tmpl" }]
shebangs = []
comment-token = "#"
language-servers = [ "nil", "nixd" ]
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "json"
scope = "source.json"
injection-regex = "json"
file-types = [
	"json",
	"arb",
	"ipynb",
	"geojson",
	"gltf",
	"webmanifest",
	{ glob = "flake.lock" },
	{ glob = ".babelrc" },
	{ glob = ".bowerrc" },
	{ glob = ".jscrc" },
	"js.map",
	"ts.map",
	"css.map",
	{ glob = ".jslintrc" },
	"jsonl",
	"jsonld",
	{ glob = ".vuerc" },
	{ glob = "composer.lock" },
	{ glob = ".watchmanconfig" },
	"avsc",
	{ glob = ".prettierrc" },
	"ldtk",
	"ldtkl",
	{ glob = "*.json.tmpl" },
]
language-servers = [ "vscode-json-language-server" ]
auto-format = true
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "kdl"
scope = "source.kdl"
file-types = ["kdl"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
injection-regex = "kdl"
# customization
formatter = { command = "" }
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "rego"
scope = "source.rego"
roots = [".regal/config.yaml"]
file-types = ["rego"]
indent = { tab-width = 2, unit = "\t" }
comment-token = "#"
language-servers = [ { name = "regal" } ]

[language-server.regal]
command = "regal"
args = ["language-server"]
config = { provideFormatter = true }

[[language]]
name = "sql"
scope = "source.sql"
file-types = ["sql", "dsql"]
comment-token = "--"
block-comment-tokens = { start = "/*", end = "*/" }
indent = { tab-width = 2, unit = "\t" }
injection-regex = "sql"

[[language]]
name = "python"
scope = "source.python"
injection-regex = "py(thon)?"
file-types = ["py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt", { glob = ".python_history" }, { glob = ".pythonstartup" }, { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" }]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]
indent = { tab-width = 2, unit = "\t" }

[[language]]
name = "dockerfile"
scope = "source.dockerfile"
injection-regex = "docker|dockerfile"
roots = ["Dockerfile", "Containerfile"]
file-types = [
	"Dockerfile",
	{ glob = "Dockerfile" },
	{ glob = "Dockerfile.*" },
	"dockerfile",
	{ glob = "dockerfile" },
	{ glob = "dockerfile.*" },
	"Containerfile",
	{ glob = "Containerfile" },
	{ glob = "Containerfile.*" },
	"containerfile",
	{ glob = "containerfile" },
	{ glob = "containerfile.*" },
]
comment-token = "#"
indent = { tab-width = 2, unit = "\t" }
language-servers = [ "docker-langserver" ]

# TODO plantUML support (https://github.com/ptdewey/plantuml-lsp)
