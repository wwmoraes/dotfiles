# yaml-language-server: $schema=https://raw.githubusercontent.com/jesseduffield/lazygit/refs/tags/v0.45.0/schema/config.json
confirmOnQuit: false
disableStartupPopups: true
notARepository: skip
quitOnTopLevelReturn: false
# services:
#   cbsp-abnamro@dev.azure.com: "azuredevops:dev.azure.com"
#   git.us.aegon.com: "github:git.us.aegon.com"
os:
  edit: hx -- "{{filename}}"
  editAtLine: hx -- "{{filename}}:{{line}}"
  editAtLineAndWait: hx -- "{{filename}}:{{line}}"
  openDirInEditor: hx -w "{{dir}}"
  open: hx -- "{{filename}}"
git:
  branchLogCmd: >-
    git log
    --color
    --graph
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    --abbrev-commit
    --date=relative {{branchName}}
    --
  allBranchesLogCmd: >-
    git log
    --color
    --graph
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
    --abbrev-commit
    --date=relative
    --
  commit:
    signOff: false
  overrideGpg: true
  paging:
    colorArg: always
    pager: >-
      delta --dark --paging=never --line-numbers --hyperlinks --hyperlinks-file-link-format="lazygit-edit://{path}:{line}"
customCommands:
- key: Y
  context: global
  description: YOLO changes
  command: >-
    git commit --amend --all --no-edit && git push --force
  loadingText: YOLO'ing...
  prompts:
  - type: confirm
    title: YOLO!
    body: Are you sure you want to amend last commit and force-push it?
- key: x
  context: global
  prompts:
  - type: menu
    title: What kind of change is it?
    key: Type
    options:
    - name: build
      description: build system or external dependencies (scripts, tasks, etc)
      value: build
    - name: chore
      description: miscellaneous (does not affect any other type)
      value: chore
    - name: ci
      description: CI-related configuration files and scripts
      value: ci
    - name: docs
      description: documentation-only updates
      value: docs
    - name: feat
      description: new feature
      value: feat
    - name: fix
      description: bug fix
      value: fix
    - name: perf
      description: performance improvement
      value: perf
    - name: refactor
      description: restructures logic (neither fixes a bug nor adds a feature)
      value: refactor
    - name: revert
      description: restores a previous state
      value: revert
    - name: style
      description: white-space, formatting, missing semi-colons, etc
      value: style
    - name: test
      description: adds missing tests or corrects existing tests
      value: test
  - type: input
    title: Is there a scope?
    key: Scope
    initialValue: ''
  - type: menu
    title: Is it a breaking change?
    key: Breaking
    options:
    - value: "false"
      description: "No"
    - value: "true"
      description: "YES"
  - type: input
    title: Commit summary
    key: Summary
  command: >-
    git commit -e -m "
    {{- .Form.Type -}}
    {{- with .Form.Scope -}}({{ . }}){{- end -}}
    {{- if eq .Form.Breaking "true" -}}!{{- end -}}
    : {{ .Form.Summary -}}
    "
  loadingText: creating commit
  description: Commit changes using conventional messages
  subprocess: true
